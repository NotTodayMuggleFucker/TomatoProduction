{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/AntDesignTheme/src/components/home/slider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport image1 from '../../assets/images/advanced-option.jpg';\nimport image2 from '../../assets/images/clean-design.jpg';\nimport { MdImageAspectRatio } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  enter: direction => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: direction => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n};\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\n\nconst Slider = () => {\n  _s();\n\n  const [[page, direction], setPage] = useState([0, 0]);\n}; // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\n// then wrap that within 0-2 to find our image ID in the array below. By passing an\n// absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\n// detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\n\n\n_s(Slider, \"wDm/sR0ENd3hz0xTHLusEYtcOtc=\");\n\n_c = Slider;\n\nfunction AppSlider() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"\",\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      custom: direction,\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: image1.image2,\n        custom: direction,\n        variants: variants,\n        initial: \"enter\",\n        animate: \"center\",\n        exit: \"exit\",\n        transition: {\n          x: {\n            type: \"spring\",\n            stiffness: 300,\n            damping: 30\n          },\n          opacity: {\n            duration: 0.2\n          }\n        },\n        drag: \"x\",\n        dragConstraints: {\n          left: 0,\n          right: 0\n        },\n        dragElastic: 1,\n        onDragEnd: (e, {\n          offset,\n          velocity\n        }) => {\n          const swipe = swipePower(offset.x, velocity.x);\n\n          if (swipe < -swipeConfidenceThreshold) {\n            paginate(1);\n          } else if (swipe > swipeConfidenceThreshold) {\n            paginate(-1);\n          }\n        }\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      onClick: () => paginate(1),\n      children: \"‣\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prev\",\n      onClick: () => paginate(-1),\n      children: \"‣\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 8\n  }, this);\n}\n\n_c2 = AppSlider;\nexport default AppSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"AppSlider\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/AntDesignTheme/src/components/home/slider.js"],"names":["React","useState","motion","AnimatePresence","image1","image2","MdImageAspectRatio","variants","enter","direction","x","opacity","center","zIndex","exit","Slider","page","setPage","AppSlider","type","stiffness","damping","duration","left","right","e","offset","velocity","swipe","swipePower","swipeConfidenceThreshold","paginate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport image1 from '../../assets/images/advanced-option.jpg';\nimport image2 from '../../assets/images/clean-design.jpg';\nimport { MdImageAspectRatio } from 'react-icons/md';\n\nconst variants = {\n    enter: (direction: number) => {\n      return {\n        x: direction > 0 ? 1000 : -1000,\n        opacity: 0\n      };\n    },\n    center: {\n      zIndex: 1,\n      x: 0,\n      opacity: 1\n    },\n    exit: (direction: number) => {\n      return {\n        zIndex: 0,\n        x: direction < 0 ? 1000 : -1000,\n        opacity: 0\n      };\n    }\n  };\n  \n  /**\n   * Experimenting with distilling swipe offset and velocity into a single variable, so the\n   * less distance a user has swiped, the more velocity they need to register as a swipe.\n   * Should accomodate longer swipes and short flicks without having binary checks on\n   * just distance thresholds and velocity > 0.\n   */\n\n    const Slider = () => {\n    const [[page, direction], setPage] = useState([0, 0]);\n    };\n  \n    // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\n    // then wrap that within 0-2 to find our image ID in the array below. By passing an\n    // absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\n    // detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\n\n\n\nfunction AppSlider() {\n    return (\n       <div id=\"\" className=\"\">\n         <AnimatePresence initial={false} custom={direction}>\n        <motion.img\n          key={page}\n          src={image1.image2}\n          custom={direction}\n          variants={variants}\n          initial=\"enter\"\n          animate=\"center\"\n          exit=\"exit\"\n          transition={{\n            x: { type: \"spring\", stiffness: 300, damping: 30 },\n            opacity: { duration: 0.2 }\n          }}\n          drag=\"x\"\n          dragConstraints={{ left: 0, right: 0 }}\n          dragElastic={1}\n          onDragEnd={(e, { offset, velocity }) => {\n            const swipe = swipePower(offset.x, velocity.x);\n\n            if (swipe < -swipeConfidenceThreshold) {\n              paginate(1);\n            } else if (swipe > swipeConfidenceThreshold) {\n              paginate(-1);\n            }\n          }}\n        />\n      </AnimatePresence>\n      <div className=\"next\" onClick={() => paginate(1)}>\n        {\"‣\"}\n      </div>\n      <div className=\"prev\" onClick={() => paginate(-1)}>\n        {\"‣\"}\n      </div> \n       </div>\n        );\n    }\n    \n    export default AppSlider;"]},"metadata":{},"sourceType":"module"}